{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "airbnb",
    "prettier",
    "plugin:@typescript-eslint/recommended",
    "plugin:jasmine/recommended",
    "plugin:react/recommended"
  ],
  "plugins": [
    "prettier",
    "jasmine",
    "react",
    "@typescript-eslint"
  ],
  "parserOptions": {
    "ecmaVersion": 2022,
    "requireConfigFile": false,
    "sourceType": "module"
  },
  "rules": {
    // The Babylon.js API often requires creating new objects via "new" even
    // if we don't plan on referencing those objects directly through variables.
    // Therefore, we must disable the "no-new" rule.
    "no-new": "off",
    "react/destructuring-assignment": "off",
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ],
    "no-underscore-dangle": [
      "warn",
      {
        "allowAfterThis": true,
        "allowAfterSuper": true
      }
    ],
    "no-console": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".tsx",
          ".ts"
        ]
      }
    ],
    "import/prefer-default-export": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ]
  },
  "env": {
    "browser": true,
    "node": true,
    "jasmine": true
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    }
  }
}